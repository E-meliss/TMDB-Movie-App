{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-5097a70a\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"movie-detail-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"movie-poster\"\n};\nvar _hoisted_3 = [\"src\"];\nvar _hoisted_4 = {\n  \"class\": \"movie-info\"\n};\nvar _hoisted_5 = {\n  \"class\": \"tagline\"\n};\nvar _hoisted_6 = {\n  \"class\": \"overview\"\n};\nvar _hoisted_7 = {\n  \"class\": \"details-list\"\n};\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Genres:\", -1 /* HOISTED */);\n});\nvar _hoisted_9 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"First Air Date:\", -1 /* HOISTED */);\n});\nvar _hoisted_10 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Number of Seasons:\", -1 /* HOISTED */);\n});\nvar _hoisted_11 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Number of Episodes:\", -1 /* HOISTED */);\n});\nvar _hoisted_12 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Vote Average:\", -1 /* HOISTED */);\n});\nvar _hoisted_13 = {\n  \"class\": \"cast-section\"\n};\nvar _hoisted_14 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h2\", null, \"Cast\", -1 /* HOISTED */);\n});\nvar _hoisted_15 = {\n  \"class\": \"cast-container\"\n};\nvar _hoisted_16 = [\"src\"];\nvar _hoisted_17 = {\n  \"class\": \"cast-info\"\n};\nvar _hoisted_18 = {\n  \"class\": \"cast-name\"\n};\nvar _hoisted_19 = {\n  \"class\": \"cast-character\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $options.getPosterUrl($data.tvShow.poster_path),\n    alt: \"TV Show Poster\"\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h1\", null, _toDisplayString($data.tvShow.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($data.tvShow.tagline || 'No Tagline Available'), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($data.tvShow.overview), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_7, [_createElementVNode(\"li\", null, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString($options.getGenres($data.tvShow.genres)), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_9, _createTextVNode(\" \" + _toDisplayString($data.tvShow.first_air_date), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_10, _createTextVNode(\" \" + _toDisplayString($data.tvShow.number_of_seasons), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_11, _createTextVNode(\" \" + _toDisplayString($data.tvShow.number_of_episodes), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_12, _createTextVNode(\" \" + _toDisplayString($data.tvShow.vote_average), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cast.slice(0, 8), function (castMember, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"cast-member\"\n    }, [_createElementVNode(\"img\", {\n      src: $options.getProfileUrl(castMember.profile_path),\n      alt: \"Cast Member\"\n    }, null, 8 /* PROPS */, _hoisted_16), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"p\", _hoisted_18, _toDisplayString(castMember.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_19, _toDisplayString(castMember.character || 'No Character Info'), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";;;;;;;EACO,SAAM;AAAwB;;EAC5B,SAAM;AAAc;;;EAGpB,SAAM;AAAY;;EAElB,SAAM;AAAS;;EACf,SAAM;AAAU;;EACf,SAAM;AAAc;;sBAClBA,oBAAwB,gBAAhB,SAAO;AAAA;;sBACfA,oBAAgC,gBAAxB,iBAAe;AAAA;;sBACvBA,oBAAmC,gBAA3B,oBAAkB;AAAA;;sBAC1BA,oBAAoC,gBAA5B,qBAAmB;AAAA;;sBAC3BA,oBAA8B,gBAAtB,eAAa;AAAA;;EAGxB,SAAM;AAAc;;sBACvBA,oBAAa,YAAT,MAAI;AAAA;;EACH,SAAM;AAAgB;;;EAGlB,SAAM;AAAW;;EACjB,SAAM;AAAW;;EACjB,SAAM;AAAgB;;uBAvBnCC,oBA4BM,OA5BNC,UA4BM,GA3BJF,oBAEM,OAFNG,UAEM,GADJH,oBAAoE;IAA9DI,GAAG,EAAEC,qBAAY,CAACC,YAAM,CAACC,WAAW;IAAGC,GAAG,EAAC;yCAEnDR,oBAWM,OAXNS,UAWM,GAVJT,oBAA0B,6BAAnBM,YAAM,CAACI,IAAI,kBAClBV,oBAAqE,KAArEW,UAAqE,mBAA/CL,YAAM,CAACM,OAAO,4CACpCZ,oBAA6C,KAA7Ca,UAA6C,mBAAtBP,YAAM,CAACQ,QAAQ,kBACtCd,oBAMK,MANLe,UAMK,GALHf,oBAAgE,aAA5DgB,UAAwB,sBAAC,oBAAGX,kBAAS,CAACC,YAAM,CAACW,MAAM,qBACvDjB,oBAAqE,aAAjEkB,UAAgC,sBAAC,oBAAGZ,YAAM,CAACa,cAAc,oBAC7DnB,oBAA2E,aAAvEoB,WAAmC,sBAAC,oBAAGd,YAAM,CAACe,iBAAiB,oBACnErB,oBAA6E,aAAzEsB,WAAoC,sBAAC,oBAAGhB,YAAM,CAACiB,kBAAkB,oBACrEvB,oBAAiE,aAA7DwB,WAA8B,sBAAC,oBAAGlB,YAAM,CAACmB,YAAY,wBAG7DzB,oBAWM,OAXN0B,WAWM,GAVJC,WAAa,EACb3B,oBAQM,OARN4B,WAQM,sBAPJ3B,oBAMM4B,6BAN6BvB,UAAI,CAACwB,KAAK,kBAAhCC,UAAU,EAAEC,KAAK;yBAA9B/B,oBAMM;MANgDgC,GAAG,EAAED,KAAK;MAAE,SAAM;QACtEhC,oBAAuE;MAAjEI,GAAG,EAAEC,sBAAa,CAAC0B,UAAU,CAACG,YAAY;MAAG1B,GAAG,EAAC;0CACvDR,oBAGM,OAHNmC,WAGM,GAFJnC,oBAA8C,KAA9CoC,WAA8C,mBAAtBL,UAAU,CAACrB,IAAI,kBACvCV,oBAA+E,KAA/EqC,WAA+E,mBAAlDN,UAAU,CAACO,SAAS","names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","src","$options","$data","poster_path","alt","_hoisted_4","name","_hoisted_5","tagline","_hoisted_6","overview","_hoisted_7","_hoisted_8","genres","_hoisted_9","first_air_date","_hoisted_10","number_of_seasons","_hoisted_11","number_of_episodes","_hoisted_12","vote_average","_hoisted_13","_hoisted_14","_hoisted_15","_Fragment","slice","castMember","index","key","profile_path","_hoisted_17","_hoisted_18","_hoisted_19","character"],"sourceRoot":"","sources":["/Users/ezgi.cosar/Documents/GitHub/TMDB-Movie-App/src/views/TvShowDetail.vue"],"sourcesContent":["<template>\n  <div class=\"movie-detail-container\">\n    <div class=\"movie-poster\">\n      <img :src=\"getPosterUrl(tvShow.poster_path)\" alt=\"TV Show Poster\" />\n    </div>\n    <div class=\"movie-info\">\n      <h1>{{ tvShow.name }}</h1>\n      <p class=\"tagline\">{{ tvShow.tagline || 'No Tagline Available' }}</p>\n      <p class=\"overview\">{{ tvShow.overview }}</p>\n      <ul class=\"details-list\">\n        <li><strong>Genres:</strong> {{ getGenres(tvShow.genres) }}</li>\n        <li><strong>First Air Date:</strong> {{ tvShow.first_air_date }}</li>\n        <li><strong>Number of Seasons:</strong> {{ tvShow.number_of_seasons }}</li>\n        <li><strong>Number of Episodes:</strong> {{ tvShow.number_of_episodes }}</li>\n        <li><strong>Vote Average:</strong> {{ tvShow.vote_average }}</li>\n      </ul>\n    </div>\n    <div class=\"cast-section\">\n      <h2>Cast</h2>\n      <div class=\"cast-container\">\n        <div v-for=\"(castMember, index) in cast.slice(0, 8)\" :key=\"index\" class=\"cast-member\">\n          <img :src=\"getProfileUrl(castMember.profile_path)\" alt=\"Cast Member\" />\n          <div class=\"cast-info\">\n            <p class=\"cast-name\">{{ castMember.name }}</p>\n            <p class=\"cast-character\">{{ castMember.character || 'No Character Info' }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      tvShow: null,\n      cast: []\n    };\n  },\n  mounted() {\n    const { id } = this.$route.params;\n    fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=348088421ad3fb3a9d6e56bb6a9a8f80&language=en-US`)\n      .then(response => response.json())\n      .then(data => {\n        this.tvShow = data;\n        return fetch(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=348088421ad3fb3a9d6e56bb6a9a8f80&language=en-US`);\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.cast = data.cast;\n      })\n      .catch(error => console.log(error));\n  },\n  methods: {\n    getPosterUrl(posterPath) {\n      return posterPath ? `https://image.tmdb.org/t/p/w500${posterPath}` : 'default-image-url';\n    },\n    getProfileUrl(profilePath) {\n      return profilePath ? `https://image.tmdb.org/t/p/w200${profilePath}` : 'default-profile-image-url';\n    },\n    getGenres(genres) {\n      return genres.map(genre => genre.name).join(', ');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.movie-detail-container {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 40px;\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n}\n\n.movie-poster img {\n  width: 100%;\n  height: auto;\n  max-width: 300px;\n  border-radius: 8px;\n}\n\n.movie-info {\n  flex: 1;\n  padding: 20px;\n  color: black;\n}\n\n.movie-info h1 {\n  font-size: 2em;\n  margin-bottom: 10px;\n}\n\n.movie-info .tagline {\n  font-style: italic;\n  color: #888;\n  margin-bottom: 20px;\n}\n\n.movie-info .overview {\n  margin-bottom: 20px;\n}\n\n.details-list {\n  list-style: none;\n  padding: 0;\n}\n\n.details-list li {\n  margin-bottom: 10px;\n  font-size: 1.1em;\n}\n\n.cast-section {\n  margin-top: 20px;\n}\n\n.cast-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n\n.cast-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n\n.cast-member {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 150px;\n}\n\n.cast-member img {\n  width: 100%;\n  height: auto;\n  border-radius: 50%;\n}\n\n.cast-info {\n  text-align: center;\n}\n\n.cast-name {\n  font-weight: bold;\n  color: black;\n}\n\n.cast-character {\n  color: #666;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}