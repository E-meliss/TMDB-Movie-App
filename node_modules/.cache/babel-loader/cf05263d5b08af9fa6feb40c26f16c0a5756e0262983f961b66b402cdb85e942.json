{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nexport default {\n  data: function data() {\n    return {\n      tvShow: null,\n      cast: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    var id = this.$route.params.id;\n    fetch(\"https://api.themoviedb.org/3/tv/\".concat(id, \"?api_key=348088421ad3fb3a9d6e56bb6a9a8f80&language=en-US\")).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      _this.tvShow = data;\n      return fetch(\"https://api.themoviedb.org/3/tv/\".concat(id, \"/credits?api_key=348088421ad3fb3a9d6e56bb6a9a8f80&language=en-US\"));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      _this.cast = data.cast;\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  },\n  methods: {\n    getPosterUrl: function getPosterUrl(posterPath) {\n      return posterPath ? \"https://image.tmdb.org/t/p/w500\".concat(posterPath) : 'default-image-url';\n    },\n    getProfileUrl: function getProfileUrl(profilePath) {\n      return profilePath ? \"https://image.tmdb.org/t/p/w200\".concat(profilePath) : 'default-profile-image-url';\n    },\n    getGenres: function getGenres(genres) {\n      return genres.map(function (genre) {\n        return genre.name;\n      }).join(', ');\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AAiCA,eAAe;EACbA,IAAI,kBAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,qBAAG;IAAA;IACR,IAAQC,EAAC,GAAM,IAAI,CAACC,MAAM,CAACC,MAAM,CAAzBF,EAAC;IACTG,KAAK,2CAAoCH,EAAE,8DAA0D,CAClGI,IAAI,CAAC,kBAAO;MAAA,OAAKC,QAAQ,CAACC,IAAI,EAAE;IAAA,GAChCF,IAAI,CAAC,cAAG,EAAK;MACZ,KAAI,CAACP,MAAK,GAAID,IAAI;MAClB,OAAOO,KAAK,2CAAoCH,EAAE,sEAAmE;IACvH,CAAC,EACAI,IAAI,CAAC,kBAAO;MAAA,OAAKC,QAAQ,CAACC,IAAI,EAAE;IAAA,GAChCF,IAAI,CAAC,cAAG,EAAK;MACZ,KAAI,CAACN,IAAG,GAAIF,IAAI,CAACE,IAAI;IACvB,CAAC,UACK,CAAC,eAAI;MAAA,OAAKS,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAAA,EAAC;EACvC,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,wBAACC,UAAU,EAAE;MACvB,OAAOA,UAAS,4CAAsCA,UAAU,IAAK,mBAAmB;IAC1F,CAAC;IACDC,aAAa,yBAACC,WAAW,EAAE;MACzB,OAAOA,WAAU,4CAAsCA,WAAW,IAAK,2BAA2B;IACpG,CAAC;IACDC,SAAS,qBAACC,MAAM,EAAE;MAChB,OAAOA,MAAM,CAACC,GAAG,CAAC,eAAI;QAAA,OAAKC,KAAK,CAACC,IAAI;MAAA,EAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACnD;EACF;AACF,CAAC","names":["data","tvShow","cast","mounted","id","$route","params","fetch","then","response","json","console","log","error","methods","getPosterUrl","posterPath","getProfileUrl","profilePath","getGenres","genres","map","genre","name","join"],"sourceRoot":"","sources":["/Users/ezgi.cosar/Documents/GitHub/TMDB-Movie-App/src/views/TvShowDetail.vue"],"sourcesContent":["<template>\n  <div class=\"movie-detail-container\">\n    <div class=\"movie-poster\">\n      <img :src=\"getPosterUrl(tvShow.poster_path)\" alt=\"TV Show Poster\" />\n    </div>\n    <div class=\"movie-info\">\n      <h1>{{ tvShow.name }}</h1>\n      <p class=\"tagline\">{{ tvShow.tagline || 'No Tagline Available' }}</p>\n      <p class=\"overview\">{{ tvShow.overview }}</p>\n      <ul class=\"details-list\">\n        <li><strong>Genres:</strong> {{ getGenres(tvShow.genres) }}</li>\n        <li><strong>First Air Date:</strong> {{ tvShow.first_air_date }}</li>\n        <li><strong>Number of Seasons:</strong> {{ tvShow.number_of_seasons }}</li>\n        <li><strong>Number of Episodes:</strong> {{ tvShow.number_of_episodes }}</li>\n        <li><strong>Vote Average:</strong> {{ tvShow.vote_average }}</li>\n      </ul>\n    </div>\n    <div class=\"cast-section\">\n      <h2>Cast</h2>\n      <div class=\"cast-container\">\n        <div v-for=\"(castMember, index) in cast.slice(0, 8)\" :key=\"index\" class=\"cast-member\">\n          <img :src=\"getProfileUrl(castMember.profile_path)\" alt=\"Cast Member\" />\n          <div class=\"cast-info\">\n            <p class=\"cast-name\">{{ castMember.name }}</p>\n            <p class=\"cast-character\">{{ castMember.character || 'No Character Info' }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      tvShow: null,\n      cast: []\n    };\n  },\n  mounted() {\n    const { id } = this.$route.params;\n    fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=348088421ad3fb3a9d6e56bb6a9a8f80&language=en-US`)\n      .then(response => response.json())\n      .then(data => {\n        this.tvShow = data;\n        return fetch(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=348088421ad3fb3a9d6e56bb6a9a8f80&language=en-US`);\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.cast = data.cast;\n      })\n      .catch(error => console.log(error));\n  },\n  methods: {\n    getPosterUrl(posterPath) {\n      return posterPath ? `https://image.tmdb.org/t/p/w500${posterPath}` : 'default-image-url';\n    },\n    getProfileUrl(profilePath) {\n      return profilePath ? `https://image.tmdb.org/t/p/w200${profilePath}` : 'default-profile-image-url';\n    },\n    getGenres(genres) {\n      return genres.map(genre => genre.name).join(', ');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.movie-detail-container {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 40px;\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  margin-top: 100px;\n}\n\n.movie-poster img {\n  width: 100%;\n  height: auto;\n  max-width: 300px;\n  border-radius: 8px;\n}\n\n.movie-info {\n  flex: 1;\n  padding: 20px;\n  color: black;\n}\n\n.movie-info h1 {\n  font-size: 2em;\n  margin-bottom: 10px;\n}\n\n.movie-info .tagline {\n  font-style: italic;\n  color: #888;\n  margin-bottom: 20px;\n}\n\n.movie-info .overview {\n  margin-bottom: 20px;\n}\n\n.details-list {\n  list-style: none;\n  padding: 0;\n}\n\n.details-list li {\n  margin-bottom: 10px;\n  font-size: 1.1em;\n}\n\n.cast-section {\n  margin-top: 20px;\n}\n\n.cast-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n\n.cast-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n}\n\n.cast-member {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 150px;\n}\n\n.cast-member img {\n  width: 100%;\n  height: auto;\n  border-radius: 50%;\n}\n\n.cast-info {\n  text-align: center;\n}\n\n.cast-name {\n  font-weight: bold;\n  color: black;\n}\n\n.cast-character {\n  color: #666;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}