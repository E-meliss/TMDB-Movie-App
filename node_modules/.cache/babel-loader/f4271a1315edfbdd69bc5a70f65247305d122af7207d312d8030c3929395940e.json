{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-5097a70a\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"tvshow-detail-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"tvshow-poster\"\n};\nvar _hoisted_3 = [\"src\"];\nvar _hoisted_4 = {\n  \"class\": \"tvshow-info\"\n};\nvar _hoisted_5 = {\n  \"class\": \"tagline\"\n};\nvar _hoisted_6 = {\n  \"class\": \"overview\"\n};\nvar _hoisted_7 = {\n  \"class\": \"details-list\"\n};\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Genres:\", -1 /* HOISTED */);\n});\nvar _hoisted_9 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"First Air Date:\", -1 /* HOISTED */);\n});\nvar _hoisted_10 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */);\n});\nvar _hoisted_11 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Number of Seasons:\", -1 /* HOISTED */);\n});\nvar _hoisted_12 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"strong\", null, \"Vote Average:\", -1 /* HOISTED */);\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $options.getPosterUrl($data.tvShow.poster_path),\n    alt: \"TV Show Poster\"\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h1\", null, _toDisplayString($data.tvShow.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($data.tvShow.tagline), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($data.tvShow.overview), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_7, [_createElementVNode(\"li\", null, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString($options.getGenres($data.tvShow.genres)), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_9, _createTextVNode(\" \" + _toDisplayString($data.tvShow.first_air_date), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_10, _createTextVNode(\" \" + _toDisplayString($data.tvShow.status), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_11, _createTextVNode(\" \" + _toDisplayString($data.tvShow.number_of_seasons), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_12, _createTextVNode(\" \" + _toDisplayString($data.tvShow.vote_average), 1 /* TEXT */)])])])]);\n}","map":{"version":3,"mappings":";;;;;;EACS,SAAM;AAAyB;;EAC7B,SAAM;AAAe;;;EAGrB,SAAM;AAAa;;EAEnB,SAAM;AAAS;;EACf,SAAM;AAAU;;EACf,SAAM;AAAc;;sBAClBA,oBAAwB,gBAAhB,SAAO;AAAA;;sBACfA,oBAAgC,gBAAxB,iBAAe;AAAA;;sBACvBA,oBAAwB,gBAAhB,SAAO;AAAA;;sBACfA,oBAAmC,gBAA3B,oBAAkB;AAAA;;sBAC1BA,oBAA8B,gBAAtB,eAAa;AAAA;;;uBAb/BC,oBAgBM,OAhBNC,UAgBM,GAfJF,oBAEM,OAFNG,UAEM,GADJH,oBAAoE;IAA9DI,GAAG,EAAEC,qBAAY,CAACC,YAAM,CAACC,WAAW;IAAGC,GAAG,EAAC;yCAEnDR,oBAWM,OAXNS,UAWM,GAVJT,oBAA0B,6BAAnBM,YAAM,CAACI,IAAI,kBAClBV,oBAA2C,KAA3CW,UAA2C,mBAArBL,YAAM,CAACM,OAAO,kBACpCZ,oBAA6C,KAA7Ca,UAA6C,mBAAtBP,YAAM,CAACQ,QAAQ,kBACtCd,oBAMK,MANLe,UAMK,GALHf,oBAAgE,aAA5DgB,UAAwB,sBAAC,oBAAGX,kBAAS,CAACC,YAAM,CAACW,MAAM,qBACvDjB,oBAAqE,aAAjEkB,UAAgC,sBAAC,oBAAGZ,YAAM,CAACa,cAAc,oBAC7DnB,oBAAqD,aAAjDoB,WAAwB,sBAAC,oBAAGd,YAAM,CAACe,MAAM,oBAC7CrB,oBAA2E,aAAvEsB,WAAmC,sBAAC,oBAAGhB,YAAM,CAACiB,iBAAiB,oBACnEvB,oBAAiE,aAA7DwB,WAA8B,sBAAC,oBAAGlB,YAAM,CAACmB,YAAY","names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","src","$options","$data","poster_path","alt","_hoisted_4","name","_hoisted_5","tagline","_hoisted_6","overview","_hoisted_7","_hoisted_8","genres","_hoisted_9","first_air_date","_hoisted_10","status","_hoisted_11","number_of_seasons","_hoisted_12","vote_average"],"sourceRoot":"","sources":["/Users/ezgi.cosar/Documents/GitHub/TMDB-Movie-App/src/views/TvShowDetail.vue"],"sourcesContent":["<template>\n    <div class=\"tvshow-detail-container\">\n      <div class=\"tvshow-poster\">\n        <img :src=\"getPosterUrl(tvShow.poster_path)\" alt=\"TV Show Poster\" />\n      </div>\n      <div class=\"tvshow-info\">\n        <h1>{{ tvShow.name }}</h1>\n        <p class=\"tagline\">{{ tvShow.tagline }}</p>\n        <p class=\"overview\">{{ tvShow.overview }}</p>\n        <ul class=\"details-list\">\n          <li><strong>Genres:</strong> {{ getGenres(tvShow.genres) }}</li>\n          <li><strong>First Air Date:</strong> {{ tvShow.first_air_date }}</li>\n          <li><strong>Status:</strong> {{ tvShow.status }}</li>\n          <li><strong>Number of Seasons:</strong> {{ tvShow.number_of_seasons }}</li>\n          <li><strong>Vote Average:</strong> {{ tvShow.vote_average }}</li>\n        </ul>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n    return {\n      tvShow: {\n        name: '',\n        tagline: '',\n        overview: '',\n        genres: [],\n        first_air_date: '',\n        status: '',\n        number_of_seasons: 0,\n        vote_average: 0,\n        poster_path: ''\n      }\n    };\n  },\n    created() {\n      this.fetchTvShowDetail();\n    },\n    methods: {\n      fetchTvShowDetail() {\n        const tvShowId = this.$route.params.id;\n        const apiKey = '348088421ad3fb3a9d6e56bb6a9a8f80';\n        fetch(`https://api.themoviedb.org/3/tv/${tvShowId}?api_key=${apiKey}&language=en-US`)\n          .then(response => response.json())\n          .then(data => {\n            this.tvShow = data;\n          });\n      },\n      getPosterUrl(path) {\n        return `https://image.tmdb.org/t/p/w500${path}`;\n      },\n      getGenres(genres) {\n        return genres.map(genre => genre.name).join(', ');\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .tvshow-detail-container {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 20px;\n    background-color: #f8f8f8;\n    border-radius: 8px;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  }\n  \n  .tvshow-poster img {\n    width: 100%;\n    height: auto;\n    max-width: 300px;\n    border-radius: 8px;\n  }\n  \n  .tvshow-info {\n    flex: 1;\n    padding: 20px;\n  }\n  \n  .tvshow-info h1 {\n    font-size: 2em;\n    margin-bottom: 10px;\n  }\n  \n  .tvshow-info .tagline {\n    font-style: italic;\n    color: #888;\n    margin-bottom: 20px;\n  }\n  \n  .tvshow-info .overview {\n    margin-bottom: 20px;\n  }\n  \n  .details-list {\n    list-style: none;\n    padding: 0;\n  }\n  \n  .details-list li {\n    margin-bottom: 10px;\n    font-size: 1.1em;\n  }\n  </style>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}